{"version":3,"sources":["components/navbar/navbar.component.jsx","components/pagination/pagination.component.jsx","components/actor-card/actorcard.component.jsx","components/actorscollection/actors-collection.component.jsx","pages/search/search.component.jsx","pages/actorview/actorview.component.jsx","pages/create/create.component.jsx","pages/about/about.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","type","id","htmlFor","to","Pagination","actorsPerPage","totalactors","paginate","pageNumbers","i","Math","ceil","push","map","number","onClick","ActorCard","actor","actor_id","first_name","src","alt","ActorsCollection","actors","loading","Search","useState","setactors","searchfield","setsearchfield","mode","setmode","setLoading","currentPage","setCurrentPage","formsubmithandler","e","a","preventDefault","axios","get","res","data","alert","indexOfLastactor","indexOfFirstactor","currentactors","slice","onSubmit","name","value","onChange","target","placeholder","length","pageNumber","ActorDetails","match","history","params","last_name","setactor","useEffect","fetchdata","handlechange","prevState","put","then","message","console","log","deletehandler","delete","Createactor","post","About","href","App","basename","process","path","component","Actorview","exact","CreateActor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a0e9928.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./navbar.styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <input type=\"checkbox\" id=\"nav-check\"></input>\r\n      <div className=\"nav-header\">\r\n        <div className=\"nav-title\">Yandex CRUD app</div>\r\n      </div>\r\n      <div className=\"nav-btn\">\r\n        <label htmlFor=\"nav-check\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"nav-links\">\r\n        <Link to=\"/\">Search</Link>\r\n        <Link to=\"/create\">Create</Link>\r\n        <Link to=\"/about\">About</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./pagination.styles.scss\";\r\nconst Pagination = ({ actorsPerPage, totalactors, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalactors / actorsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div className=\"pagination-component\">\r\n      <div className=\"pagination\">\r\n        {pageNumbers.map((number) => (\r\n          <span key={number} className=\"page-number\">\r\n            <span onClick={() => paginate(number)} className=\"page-link\">\r\n              {number}\r\n            </span>\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport \"./actorcard.styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ActorCard({ actor: { actor_id, first_name } }) {\r\n  return (\r\n    <Link to={`/actor/${actor_id}`}>\r\n      <div className=\"actor-card\">\r\n        <div className=\"actor-image\">\r\n          <img\r\n            src={`https://robohash.org/${actor_id}?set=set5&size=100x100`}\r\n            alt={actor_id}\r\n          ></img>\r\n        </div>\r\n        <div className=\"details\">\r\n          <span className=\"actor-name\">{first_name}</span>\r\n          <span>{actor_id}</span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default ActorCard;\r\n","import React from \"react\";\r\nimport \"./actors-collection.styles.scss\";\r\nimport Actorcard from \"../actor-card/actorcard.component\";\r\nconst ActorsCollection = ({ actors, loading }) => {\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"actors-view\">\r\n      {actors.map((actor) => (\r\n        <div key={actor.actor_id} className=\"actor-card-view\">\r\n          <Actorcard actor={actor}></Actorcard>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActorsCollection;\r\n","import React, { useState } from \"react\";\r\nimport \"./search.styles.scss\";\r\nimport Pagination from \"../../components/pagination/pagination.component\";\r\nimport ActorsCollection from \"../../components/actorscollection/actors-collection.component\";\r\nimport axios from \"axios\";\r\n\r\nconst Search = () => {\r\n  const [actors, setactors] = useState([]);\r\n  const [searchfield, setsearchfield] = useState(\"\");\r\n  const [mode, setmode] = useState(\"name\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [actorsPerPage] = useState(12);\r\n\r\n  const formsubmithandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(\r\n        `http://localhost:9000/api/actors/search${mode}/${searchfield}`\r\n      );\r\n      setactors(res.data);\r\n      setLoading(false);\r\n    } catch {\r\n      alert(\"no user found try again\");\r\n      setLoading(false);\r\n      setactors([]);\r\n    }\r\n  };\r\n\r\n  const HandleModeChange = (e) => {\r\n    setmode(e.target.value);\r\n  };\r\n  const SearchFieldChange = (e) => {\r\n    setsearchfield(e.target.value);\r\n  };\r\n\r\n  // Get current posts\r\n  const indexOfLastactor = currentPage * actorsPerPage;\r\n  const indexOfFirstactor = indexOfLastactor - actorsPerPage;\r\n  const currentactors = actors.slice(indexOfFirstactor, indexOfLastactor);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"Search-page\">\r\n      <div className=\"description\">Enter actor name / id to search</div>\r\n      <div className=\"search-feature\">\r\n        <form className=\"search-form\" onSubmit={formsubmithandler}>\r\n          <select\r\n            className=\"mode-selection\"\r\n            name=\"mode-selection\"\r\n            value={mode}\r\n            onChange={HandleModeChange}\r\n          >\r\n            <option className=\"mode-value\" value=\"name\">\r\n              Name\r\n            </option>\r\n            <option className=\"mode-value\" value=\"id\">\r\n              ID\r\n            </option>\r\n          </select>\r\n          <input\r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Type here\"\r\n            value={searchfield}\r\n            onChange={SearchFieldChange}\r\n          ></input>\r\n          <input type=\"submit\" className=\"search-button\" value=\"Submit\"></input>\r\n        </form>\r\n      </div>\r\n      <div className=\"actorscontainer\">\r\n        <ActorsCollection actors={currentactors} loading={loading} />\r\n        <Pagination\r\n          actorsPerPage={actorsPerPage}\r\n          totalactors={actors.length}\r\n          paginate={paginate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./actorview.styles.scss\";\r\nfunction ActorDetails({ match, history }) {\r\n  const id = match.params.id;\r\n  const [actor, setactor] = useState({\r\n    actor_id: 0,\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchdata = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `http://localhost:9000/api/actors/searchid/${id}`\r\n        );\r\n        setactor(res.data[0]);\r\n      } catch {\r\n        alert(\"invalid id\");\r\n        history.push(\"/\");\r\n      }\r\n    };\r\n    fetchdata();\r\n  }, [id, history]);\r\n\r\n  const handlechange = (e) => {\r\n    const { name, value } = e.target;\r\n    setactor((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const formsubmithandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios\r\n        .put(`http://localhost:9000/api/actor/edit/${actor.actor_id}`, actor)\r\n        .then((res) => res.data)\r\n        .then((data) => {\r\n          alert(data.message);\r\n          history.push(\"/\");\r\n        });\r\n    } catch {\r\n      alert(\"operation failed\");\r\n    }\r\n  };\r\n  console.log(actor);\r\n\r\n  const deletehandler = async (e) => {\r\n    try {\r\n      await axios\r\n        .delete(`http://localhost:9000/api/actor/delete/${actor.actor_id}`)\r\n        .then((res) => res.data)\r\n        .then((data) => alert(data.message));\r\n      history.push(\"/\");\r\n    } catch {\r\n      alert(\"operation failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Actor-details\">\r\n      <div className=\"actor-image\">\r\n        <img\r\n          src={`https://robohash.org/${actor.actor_id}?set=set5&size=200x200`}\r\n          alt={id}\r\n        ></img>\r\n      </div>\r\n      <form className=\"actor-form\" onSubmit={formsubmithandler}>\r\n        <input\r\n          className=\"first-name form-input\"\r\n          type=\"text\"\r\n          name=\"first_name\"\r\n          placeholder=\"First Name\"\r\n          value={actor.first_name}\r\n          onChange={handlechange}\r\n        ></input>\r\n        <input\r\n          className=\"last-name form-input\"\r\n          name=\"last_name\"\r\n          type=\"text\"\r\n          placeholder=\"Last Name\"\r\n          value={actor.last_name}\r\n          onChange={handlechange}\r\n        ></input>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"update-button button\"\r\n          value=\"Update\"\r\n        ></input>\r\n      </form>\r\n      <button className=\"delete-button button\" onClick={deletehandler}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActorDetails;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./create.styles.scss\";\r\nfunction Createactor({ history }) {\r\n  const [actor, setactor] = useState({\r\n    actor_id: 0,\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n  });\r\n\r\n  const handlechange = (e) => {\r\n    const { name, value } = e.target;\r\n    setactor((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const formsubmithandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = await axios\r\n        .post(\"http://localhost:9000/api/actor/add\", actor)\r\n        .then((res) => res.data);\r\n      alert(data.message);\r\n      history.push(\"/\");\r\n    } catch {\r\n      alert(\"operation failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Actor-details\">\r\n      <form className=\"actor-form\" onSubmit={formsubmithandler}>\r\n        <input\r\n          className=\"actor-id form-input\"\r\n          type=\"text\"\r\n          name=\"actor_id\"\r\n          placeholder=\"ID\"\r\n          value={actor.actor_id}\r\n          onChange={handlechange}\r\n        ></input>\r\n        <input\r\n          className=\"first-name form-input\"\r\n          type=\"text\"\r\n          name=\"first_name\"\r\n          placeholder=\"First Name\"\r\n          value={actor.first_name}\r\n          onChange={handlechange}\r\n        ></input>\r\n\r\n        <input\r\n          className=\"last-name form-input\"\r\n          name=\"last_name\"\r\n          type=\"text\"\r\n          placeholder=\"Last Name\"\r\n          value={actor.last_name}\r\n          onChange={handlechange}\r\n        ></input>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"create-button button\"\r\n          value=\"Create Actor\"\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Createactor;\r\n","import React from \"react\";\r\nimport \"./about.styles.scss\";\r\nfunction About() {\r\n  return (\r\n    <div className=\"about\">\r\n      <p>This is a assessment for Yandex Web development position</p>\r\n      <p>made by using MYSQL local host, ExpressJS and ReactJS</p>\r\n      <p>by Chaitanya Krishna</p>\r\n      <a href=\"https://github.com/vebb374/\"> Github account</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import \"./App.scss\";\nimport React from \"react\";\nimport Navbar from \"./components/navbar/navbar.component\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Search from \"./pages/search/search.component\";\nimport Actorview from \"./pages/actorview/actorview.component\";\nimport CreateActor from \"./pages/create/create.component.jsx\";\nimport About from \"./pages/about/about.component.jsx\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navbar></Navbar>\n        <Switch>\n          <Route path=\"/actor/:id\" component={Actorview}></Route>\n          <Route exact path=\"/create\" component={CreateActor}></Route>\n          <Route exact path=\"/about\" component={About}></Route>\n          <Route exact path=\"/\" component={Search}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}